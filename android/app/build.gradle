apply plugin: 'com.android.application'

android {
    namespace "com.sporttracker.fitness"
    compileSdk rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.sporttracker.fitness"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        // App metadata for Play Store
        manifestPlaceholders = [
            appName: "Sport Tracker",
            appDescription: "Gamified fitness tracking with social features"
        ]
        
        // Localization support
        resConfigs "en", "es"
        aaptOptions {
             // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
             // Default: https://android.googlesource.com/platform/frameworks/base/+/282e181b58cf72b6ca770dc7ca5f91f135444502/tools/aapt/AaptAssets.cpp#61
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }
    signingConfigs {
        release {
            if (project.hasProperty('SPORT_TRACKER_RELEASE_STORE_FILE')) {
                storeFile file(SPORT_TRACKER_RELEASE_STORE_FILE)
                storePassword SPORT_TRACKER_RELEASE_STORE_PASSWORD
                keyAlias SPORT_TRACKER_RELEASE_KEY_ALIAS
                keyPassword SPORT_TRACKER_RELEASE_KEY_PASSWORD
            } else {
                // Default keystore for development builds
                storeFile file('sport-tracker-release.keystore')
                storePassword 'android'
                keyAlias 'sport-tracker-key'
                keyPassword 'android'
            }
        }
    }
    
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            
            // Memory optimizations for debug builds
            manifestPlaceholders = [
                largeHeap: "false",
                hardwareAccelerated: "true"
            ]
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            
            // Additional optimizations for production
            zipAlignEnabled true
            crunchPngs true
            
            // Memory and performance optimizations
            manifestPlaceholders = [
                largeHeap: "true",
                hardwareAccelerated: "true"
            ]
            
            // Optimize APK size
            packagingOptions {
                exclude 'META-INF/DEPENDENCIES'
                exclude 'META-INF/LICENSE'
                exclude 'META-INF/LICENSE.txt'
                exclude 'META-INF/NOTICE'
                exclude 'META-INF/NOTICE.txt'
                exclude 'META-INF/ASL2.0'
                exclude 'META-INF/*.kotlin_module'
                exclude 'META-INF/INDEX.LIST'
                exclude 'META-INF/io.netty.versions.properties'
                exclude '**/kotlin/**'
                exclude '**/*.kotlin_metadata'
                exclude '**/*.kotlin_builtins'
                pickFirst '**/libc++_shared.so'
                pickFirst '**/libjsc.so'
            }
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    packagingOptions {
        pickFirst '**/libc++_shared.so'
        pickFirst '**/libjsc.so'
    }
}

repositories {
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
